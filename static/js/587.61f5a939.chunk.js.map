{"version":3,"file":"static/js/587.61f5a939.chunk.js","mappings":"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","sources":["routes/Cart.js"],"sourcesContent":["import { countMinus, del, countAdd, add } from \"./../store.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Cart() {\r\n  // state라는 변수안에 store.js안에 있는 state를 모두 담고\r\n  let state = useSelector((state) => {\r\n    return state;\r\n  });\r\n  let dispatch = useDispatch();\r\n  // state.cart[0].name 이런식으로 오브젝트 자료 꺼내기\r\n  // state.cart[0] 이런식으로 어레이 자료 꺼내기\r\n  let itemTotal = (item) => {\r\n    return item.price * item.count;\r\n  };\r\n\r\n  let total = state.cart.reduce((a, i) => {\r\n    return a + itemTotal(i);\r\n  }, 0);\r\n\r\n  let [on, setOn] = useState(\"yourOrder\");\r\n  function handleClick(h2Name) {\r\n    setOn(h2Name);\r\n  }\r\n\r\n  if (state.cart.length === 0 && on === \"yourOrder\") {\r\n    return (\r\n      <div id=\"cart-container\">\r\n        <div id=\"cart\">\r\n          <div className=\"cart-header\">\r\n            <h2\r\n              className={on === \"yourOrder\" ? \"on\" : \"\"}\r\n              onClick={() => handleClick(\"yourOrder\")}\r\n            >\r\n              YOUR ORDER\r\n            </h2>\r\n            <h2\r\n              className={on === \"recentlyViewed\" ? \"on\" : \"\"}\r\n              onClick={() => handleClick(\"recentlyViewed\")}\r\n            >\r\n              RECENTLY VIEWED\r\n            </h2>\r\n          </div>\r\n          <p className=\"nullCart\">장바구니가 비어 있습니다.</p>\r\n          <Link to={\"/perfume\"} className=\"nullCartShop\">\r\n            쇼핑하러 가기\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (on === \"yourOrder\") {\r\n    return (\r\n      <div id=\"cart-container\">\r\n        <div id=\"cart\">\r\n          <div className=\"cart-header\">\r\n            <h2\r\n              className={on === \"yourOrder\" ? \"on\" : \"\"}\r\n              onClick={() => handleClick(\"yourOrder\")}\r\n            >\r\n              YOUR ORDER\r\n            </h2>\r\n            <h2\r\n              className={on === \"recentlyViewed\" ? \"on\" : \"\"}\r\n              onClick={() => handleClick(\"recentlyViewed\")}\r\n            >\r\n              RECENTLY VIEWED\r\n            </h2>\r\n          </div>\r\n          {state.cart.map((a, i) => {\r\n            return (\r\n              <div className=\"cart-item\" key={i}>\r\n                <img src={`${a.img}`} />\r\n                <div className=\"cart-item-count-container\">\r\n                  <p>{a.name}</p>\r\n                  <div className=\"cart-item-input-container\">\r\n                    <button\r\n                      onClick={() => {\r\n                        if (state.cart[i].count > 1) {\r\n                          dispatch(countMinus(state.cart[i].id));\r\n                        }\r\n                      }}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <p>{a.count}</p>\r\n                    <button\r\n                      onClick={() => {\r\n                        dispatch(countAdd(state.cart[i].id));\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"cart-item-del-container\">\r\n                  <p>{Number(a.price).toLocaleString()}</p>\r\n                  <button\r\n                    className=\"cart-del\"\r\n                    onClick={() => {\r\n                      if (window.confirm(\"상품을 삭제 하시겠습니까?\")) {\r\n                        dispatch(del([i]));\r\n                      }\r\n                    }}\r\n                  >\r\n                    삭제\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <div className=\"cart-totalprice\">\r\n            <p className=\"totaltxt\">TOTAL</p>\r\n            <p>{Number(total).toLocaleString()} 원</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (on === \"recentlyViewed\") {\r\n    return (\r\n      <div id=\"cart-container\">\r\n        <div id=\"cart\">\r\n          <div className=\"cart-header\">\r\n            <h2\r\n              className={on === \"yourOrder\" ? \"on\" : \"\"}\r\n              onClick={() => handleClick(\"yourOrder\")}\r\n            >\r\n              YOUR ORDER\r\n            </h2>\r\n            <h2\r\n              className={on === \"recentlyViewed\" ? \"on\" : \"\"}\r\n              onClick={() => handleClick(\"recentlyViewed\")}\r\n            >\r\n              RECENTLY VIEWED\r\n            </h2>\r\n          </div>\r\n          <Watch />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Watch() {\r\n  let dispatch = useDispatch();\r\n  let state = useSelector((state) => state);\r\n  let watched = JSON.parse(localStorage.getItem(\"watched\"));\r\n  let [num, setNum] = useState(1);\r\n\r\n  return (\r\n    <ul className=\"recentlyViewed\">\r\n      {watched.map((a) => {\r\n        return (\r\n          <li key={a.id}>\r\n            <img className=\"img\" src={a.img} alt={a.name} />\r\n            <h4>{a.name}</h4>\r\n            <button\r\n              onClick={() => {\r\n                if (window.confirm(\"추가 하시겠습니까?\")) {\r\n                  let 장바구니 = state.cart.findIndex((i) => i.id === a.id);\r\n                  if (장바구니 === -1) {\r\n                    dispatch(\r\n                      add({\r\n                        id: a.id,\r\n                        name: a.name,\r\n                        price: a.price,\r\n                        count: 1,\r\n                        num: num,\r\n                        img: a.img,\r\n                      })\r\n                    );\r\n                  } else {\r\n                    dispatch(countAdd(a.id));\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              추가하기\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n"],"names":["Watch","dispatch","useDispatch","state","useSelector","watched","JSON","parse","localStorage","getItem","num","setNum","useState","_jsx","className","children","map","a","_jsxs","src","img","alt","name","onClick","window","confirm","장바구니","cart","findIndex","i","id","add","price","count","countAdd","total","reduce","item","on","setOn","handleClick","h2Name","length","Link","to","concat","countMinus","Number","toLocaleString","del"],"sourceRoot":""}